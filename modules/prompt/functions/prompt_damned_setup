
#
# 16 Terminal Colors
# -- ---------------
#  0 black
#  1 red
#  2 green
#  3 yellow
#  4 blue
#  5 magenta
#  6 cyan
#  7 white
#  8 bright black
#  9 bright red
# 10 bright green
# 11 bright yellow
# 12 bright blue
# 13 bright magenta
# 14 bright cyan
# 15 bright white
#

#    
# ●
# ❯

# Load dependencies.
pmodload 'helper'

function prompt_damned_pwd {
  local pwd="${PWD/#$HOME/~}"

  if [[ "$pwd" == (#m)[/~] ]]; then
    _prompt_damned_pwd="$MATCH"
    unset MATCH
  else
    _prompt_damned_pwd="${${${${(@j:/:M)${(@s:/:)pwd}##.#?}:h}%/}//\%/%%}/${${pwd:t}//\%/%%}"
  fi
}

function prompt_damned_right_info {
  if (( _prompt_damned_precmd_async_pid > 0 )); then
    # Append Git status.
    if [[ -s "$_prompt_damned_precmd_async_data" ]]; then
      alias typeset='typeset -g'
      source "$_prompt_damned_precmd_async_data"
      RPROMPT+='${git_info:+${(e)git_info[status]}}'
      RPROMPT+='${python_info:+${(e)python_info[virtualenv]}}'
      unalias typeset
    fi

    # Reset PID.
    _prompt_damned_precmd_async_pid=0

    # Redisplay prompt.
    zle && zle reset-prompt
  fi
}

function prompt_damned_precmd_async {
  # Get Git repository information.
  if (( $+functions[git-info] )); then
    git-info
    typeset -p git_info >! "$_prompt_damned_precmd_async_data"
  fi

  if (( $+functions[python-info] )); then
    python-info
    typeset -p python_info >> "$_prompt_damned_precmd_async_data"
  fi

  # Signal completion to parent process.
  kill -WINCH $$
}

function prompt_damned_precmd {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS

  # Format PWD.
  prompt_damned_pwd

  # Define prompts.
  # RPROMPT='${editor_info[overwrite]}%(?:: %F{1}⏎%f)${VIM:+" %B%F{6}V%f%b"}'
  RPROMPT=''

  # Kill the old process of slow commands if it is still running.
  if (( _prompt_damned_precmd_async_pid > 0 )); then
    kill -KILL "$_prompt_damned_precmd_async_pid" &>/dev/null
  fi

  # Compute slow commands in the background.
  trap prompt_damned_right_info WINCH
  prompt_damned_precmd_async &!
  _prompt_damned_precmd_async_pid=$!
}

function prompt_damned_setup {
  setopt LOCAL_OPTIONS
  unsetopt XTRACE KSH_ARRAYS
  prompt_opts=(cr percent subst)
  _prompt_damned_precmd_async_pid=0
  _prompt_damned_precmd_async_data="${TMPPREFIX}-prompt_damned_data"

  # Load required functions.
  autoload -Uz add-zsh-hook

  # Add hook for calling git-info before each command.
  add-zsh-hook precmd prompt_damned_precmd

  # Set editor-info parameters.
  zstyle ':prezto:module:editor:info:completing' format '%B%F{red}...%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary' format '%B%F{blue}❯%f%b'
  zstyle ':prezto:module:editor:info:keymap:primary:overwrite' format '%F{red}♺%f'
  zstyle ':prezto:module:editor:info:keymap:alternate' format '%B%F{red}❮%f%b'

  # Set git-info parameters.
  zstyle ':prezto:module:git:info' verbose 'no'
  zstyle ':prezto:module:git:info:branch' format ' %%B%F{2}%b%f%%b'
  zstyle ':prezto:module:git:info:keys' format \
    'status' '⑊%b '

  zstyle ':prezto:module:python:info:virtualenv' format \
    '%F{11}%B⌥%b%f  %v'

  # Define prompts.
  PROMPT='%K{240}%F{255} $_prompt_damned_pwd %f%k%F{240}%f'
  PROMPT+='${editor_info[keymap]} '
  # PROMPT='${SSH_TTY:+"%F{9}%n%f%F{7}@%f%F{3}%m%f "}%F{4}${_prompt_damned_pwd}%(!. %B%F{1}#%f%b.)${editor_info[keymap]} '
  RPROMPT=''
  SPROMPT='zsh: correct %F{1}%R%f to %F{2}%r%f [nyae]? '
}

function prompt_damned_preview {
  local +h PROMPT=''
  local +h RPROMPT=''
  local +h SPROMPT=''

  editor-info 2>/dev/null
  prompt_preview_theme 'sorin'
}

prompt_damned_setup "$@"
